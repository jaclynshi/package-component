{"code":"import React, { memo, useEffect, useState, createRef } from 'react';\r\nconst LazyLoad = (props) => {\r\n    const { children, delay } = props;\r\n    const [showEl, setShowEl] = useState(false);\r\n    const lazyRef = createRef();\r\n    let io; //观察者\r\n    useEffect(() => {\r\n        io = new IntersectionObserver((entries) => elementObverse(entries));\r\n        io.observe(lazyRef.current);\r\n    }, []);\r\n    const elementObverse = (entries) => {\r\n        //监听函数\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                if (delay) {\r\n                    setTimeout(() => {\r\n                        setShowEl(true);\r\n                    }, delay);\r\n                }\r\n                else {\r\n                    setShowEl(true);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return (React.createElement(\"div\", { className: \"lazyLoad\", ref: lazyRef }, showEl && children));\r\n};\r\nexport default memo(LazyLoad);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts"]}
