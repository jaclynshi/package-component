{"code":"import React, { useMemo, useContext, forwardRef } from 'react';\r\nimport { globalCtx } from '../GlobalConfig';\r\nimport './index.module.less';\r\nconst Button = (props) => {\r\n    const { type, width = '100%', height = '40', disabled, circle, dashed, loading, handleClick, children, style = {}, } = props;\r\n    const { globalColor } = useContext(globalCtx);\r\n    const buttonStyle = useMemo(() => {\r\n        if (!type && type !== 'danger' && type !== 'warning' && type !== 'info' && type !== 'text') {\r\n            return 'primary';\r\n        }\r\n        if (type === 'text' && disabled) {\r\n            return 'disabled-text';\r\n        }\r\n        return type;\r\n    }, [type]);\r\n    const buttonSize = useMemo(() => {\r\n        var size = Object.assign(Object.assign({}, style), { width: '100%', height: '40px' });\r\n        if (width) {\r\n            size.width = width + 'px';\r\n        }\r\n        if (height) {\r\n            size.height = height + 'px';\r\n        }\r\n        if (circle) {\r\n            size = Object.assign(Object.assign({}, size), { borderRadius: '50%' });\r\n        }\r\n        if (dashed && type === 'text') {\r\n            size = Object.assign(Object.assign({}, size), { border: '1px dashed #ccc' });\r\n        }\r\n        if (disabled) {\r\n            size = Object.assign(Object.assign({}, size), { cursor: 'not-allowed' });\r\n        }\r\n        if (globalColor) {\r\n            size = Object.assign(Object.assign({}, size), { background: globalColor });\r\n        }\r\n        return size;\r\n    }, [width, height, circle, dashed]);\r\n    return (React.createElement(\"div\", { className: \"button\" },\r\n        React.createElement(\"button\", { className: buttonStyle, style: Object.assign(Object.assign({ width: width + 'px', height: height + 'px' }, buttonSize), { '--isDisabled': disabled ? 1 : 0.7 }), disabled: disabled ? true : false, onClick: handleClick },\r\n            loading && React.createElement(\"div\", { className: \"loading1\" }),\r\n            children)));\r\n};\r\nconst ForwardRefButton = forwardRef(Button);\r\nconst ButtonComponent = ForwardRefButton;\r\nButtonComponent.displayName = 'Button';\r\nexport default ButtonComponent;\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/index.tsx"]}
