{"code":"import React, { memo, useMemo, useEffect, useContext } from 'react';\r\nimport { CaretDownOutlined, CaretRightOutlined, CaretLeftOutlined } from '@ant-design/icons';\r\nimport './style/item.module.less';\r\nimport useStateCallback from '../../../../scripts/common_utils/hooks/useStateCallback';\r\nimport { ctx } from './index';\r\nconst CollapseItem = (props) => {\r\n    const { children, header, disabled = false, listKey, extra } = props;\r\n    const [contentDomHeight, setContentDomHeight] = useStateCallback(0);\r\n    const [hasOpen, setHasOpen] = useStateCallback(false);\r\n    const { activeKeyList, setActiveKeyList, accordion, headerAlign, lazyLoad, toggleCallback } = useContext(ctx); //父组件共享状态\r\n    useEffect(() => {\r\n        //根据默认值展开或收起\r\n        if (activeKeyList.indexOf(Number(listKey)) == -1) {\r\n            setContentDomHeight(0);\r\n        }\r\n        else {\r\n            setContentDomHeight(document.querySelector('.collapse-item-content').scrollHeight + 30);\r\n        }\r\n    }, [activeKeyList]);\r\n    const toggleContent = () => {\r\n        if (disabled)\r\n            return; //禁用\r\n        let newHeight = contentDomHeight;\r\n        if (newHeight == 0) {\r\n            //展开\r\n            if (lazyLoad && !hasOpen) {\r\n                //首次展开懒加载\r\n                setHasOpen(true, (state) => {\r\n                    newHeight =\r\n                        document.querySelector('.collapse-item-content').scrollHeight + 30;\r\n                    if (accordion) {\r\n                        //手风琴，全部清除再加入\r\n                        setActiveKeyList([Number(listKey)]);\r\n                        toggleCallback && toggleCallback([Number(listKey)]);\r\n                    }\r\n                    else {\r\n                        setActiveKeyList((oldAList) => {\r\n                            toggleCallback && toggleCallback([...[...oldAList, Number(listKey)].sort()]);\r\n                            return [...[...oldAList, Number(listKey)].sort()];\r\n                        });\r\n                    }\r\n                    setContentDomHeight(newHeight);\r\n                });\r\n            }\r\n            else {\r\n                newHeight =\r\n                    document.querySelector('.collapse-item-content').scrollHeight + 30;\r\n                if (accordion) {\r\n                    //手风琴，全部清除再加入\r\n                    setActiveKeyList([Number(listKey)]);\r\n                    toggleCallback && toggleCallback([Number(listKey)]);\r\n                }\r\n                else {\r\n                    setActiveKeyList((oldAList) => {\r\n                        toggleCallback && toggleCallback([...[...oldAList, Number(listKey)].sort()]);\r\n                        return [...[...oldAList, Number(listKey)].sort()];\r\n                    });\r\n                }\r\n                setContentDomHeight(newHeight);\r\n            }\r\n        }\r\n        else {\r\n            //收起\r\n            newHeight = 0;\r\n            setActiveKeyList((oldAList) => {\r\n                oldAList.splice(oldAList.findIndex((item, i) => Number(i) + 1 == listKey), 1);\r\n                return [...oldAList.sort()];\r\n            });\r\n            setContentDomHeight(newHeight);\r\n        }\r\n    };\r\n    const headerHeight = useMemo(() => {\r\n        //展开高度\r\n        return {\r\n            maxHeight: `${contentDomHeight}px`,\r\n        };\r\n    }, [contentDomHeight]);\r\n    const renderHeader = useMemo(() => {\r\n        if (headerAlign == 'left') {\r\n            return (React.createElement(\"div\", { className: \"collapse-item-header\", onClick: toggleContent, style: disabled ? { color: '#c9cdd4', cursor: 'not-allowed' } : {} },\r\n                React.createElement(\"div\", { className: \"left\" },\r\n                    React.createElement(\"div\", { className: \"header-icon\" }, headerHeight.maxHeight == '0px' ? React.createElement(CaretRightOutlined, null) : React.createElement(CaretDownOutlined, null)),\r\n                    React.createElement(\"div\", { className: \"header-text\" }, header)),\r\n                extra && React.createElement(\"div\", { className: \"right\" }, extra)));\r\n        }\r\n        else if (headerAlign == 'right') {\r\n            return (React.createElement(\"div\", { className: \"collapse-item-header\", onClick: toggleContent, style: disabled ? { color: '#c9cdd4', cursor: 'not-allowed' } : {} },\r\n                React.createElement(\"div\", { className: \"left\" },\r\n                    React.createElement(\"div\", { className: \"header-text\" }, header)),\r\n                React.createElement(\"div\", { className: \"right\" },\r\n                    extra,\r\n                    React.createElement(\"div\", { className: \"header-icon\" }, headerHeight.maxHeight == '0px' ? React.createElement(CaretLeftOutlined, null) : React.createElement(CaretDownOutlined, null)))));\r\n        }\r\n        else if (headerAlign == 'hide') {\r\n            return (React.createElement(\"div\", { className: \"collapse-item-header\", onClick: toggleContent, style: disabled ? { color: '#c9cdd4', cursor: 'not-allowed' } : {} },\r\n                React.createElement(\"div\", { className: \"left\" },\r\n                    React.createElement(\"div\", { className: \"header-text\" }, header)),\r\n                React.createElement(\"div\", { className: \"right\" }, extra)));\r\n        }\r\n    }, [headerAlign, headerHeight, disabled]);\r\n    return (React.createElement(\"div\", { className: \"collapse-item\" },\r\n        renderHeader,\r\n        React.createElement(\"div\", { className: \"collapse-item-content\", style: headerHeight }, lazyLoad ? hasOpen && children : children)));\r\n};\r\nexport default memo(CollapseItem);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Collapse/interfase.ts","/Users/sjq/Desktop/study/concis/Concis/node_modules/@ant-design/icons/lib/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/scripts/common_utils/hooks/useStateCallback.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Collapse/index.tsx"]}
