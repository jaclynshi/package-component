{"code":"import React, { memo, useMemo, useContext } from 'react';\r\nimport { globalCtx } from '../GlobalConfig';\r\nimport './index.module.less';\r\nconst Badge = (props) => {\r\n    const { children, style = {}, count, maxCount = 99, dotStyle = {}, dot, offset = [2, 2], text, } = props;\r\n    const { globalColor } = useContext(globalCtx);\r\n    const computedCount = useMemo(() => {\r\n        if (count) {\r\n            if (maxCount) {\r\n                if (count > maxCount) {\r\n                    return `${maxCount}+`;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }\r\n            else {\r\n                return count;\r\n            }\r\n        }\r\n    }, [count, maxCount]);\r\n    const countStyle = useMemo(() => {\r\n        if (children) {\r\n            if (String(computedCount).length > 1) {\r\n                return {\r\n                    borderRadius: '20px',\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    borderRadius: '50%',\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            if (String(computedCount).length == 1) {\r\n                return {\r\n                    padding: '',\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    padding: '0 6px',\r\n                };\r\n            }\r\n        }\r\n    }, [children, count, maxCount]);\r\n    return (React.createElement(React.Fragment, null, children ? (React.createElement(\"div\", { className: \"badge\", style: Object.assign(Object.assign({}, style), { '--global-color': globalColor || '#f53f3f' }) },\r\n        children,\r\n        dot ? (React.createElement(\"span\", { className: \"dot\", style: Object.assign(Object.assign({}, dotStyle), { right: `${offset[0]}px`, top: `${offset[1]}px` }) })) : text ? (React.createElement(\"span\", { className: \"badge-text\" }, text)) : (React.createElement(\"span\", { className: \"count\", style: Object.assign(Object.assign({}, dotStyle), countStyle) }, computedCount)))) : (React.createElement(\"div\", { className: \"no-child-badge\", style: Object.assign(Object.assign(Object.assign(Object.assign({}, style), dotStyle), countStyle), { '--global-color': globalColor || '#f53f3f' }) }, computedCount))));\r\n};\r\nexport default memo(Badge);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Badge/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/index.tsx"]}
