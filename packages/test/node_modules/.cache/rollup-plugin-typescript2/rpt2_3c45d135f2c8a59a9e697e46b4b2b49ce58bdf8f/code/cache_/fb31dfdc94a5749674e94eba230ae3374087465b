{"code":"import React, { memo, useState, useCallback, useMemo, Fragment, useEffect, useContext, } from 'react';\r\nimport { ctx } from '../Form';\r\nimport { globalCtx } from '../GlobalConfig';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport './index.module.less';\r\nconst CheckBox = (props) => {\r\n    const { children, checked, disabled, group, checkCallback, checkGroupCallback } = props;\r\n    const [checkStatus, setCheckStatus] = useState();\r\n    const [checkGroup, setCheckGroup] = useState(group || []);\r\n    const formCtx = useContext(ctx);\r\n    const { globalColor } = useContext(globalCtx);\r\n    useEffect(() => {\r\n        if (checked != undefined) {\r\n            setCheckStatus(checked);\r\n        }\r\n        else {\r\n            setCheckStatus(false);\r\n        }\r\n    }, [checked]);\r\n    useEffect(() => {\r\n        //用于监听Form组件的重置任务\r\n        if (formCtx.reset) {\r\n            setCheckStatus(checked);\r\n        }\r\n    }, [formCtx.reset]);\r\n    const toggleCheckedStatus = () => {\r\n        //多选单组件切换状态\r\n        if (disabled)\r\n            return;\r\n        setCheckStatus(!checkStatus);\r\n        checkCallback && checkCallback(!checkStatus);\r\n    };\r\n    const toggleGroupCheckedStatus = (index) => {\r\n        var _a;\r\n        //切换多选组状态\r\n        const oldCheckGroup = [...checkGroup];\r\n        oldCheckGroup[index].checked = ((_a = oldCheckGroup[index]) === null || _a === void 0 ? void 0 : _a.checked)\r\n            ? !oldCheckGroup[index].checked\r\n            : true;\r\n        setCheckGroup(oldCheckGroup);\r\n        checkGroupCallback && checkGroupCallback(oldCheckGroup);\r\n    };\r\n    const renderCheckBoxDom = useMemo(() => {\r\n        //渲染单check状态\r\n        if (disabled) {\r\n            return React.createElement(\"div\", { className: \"disblaed-checkBox\" });\r\n        }\r\n        else if (checkStatus) {\r\n            return (React.createElement(\"div\", { className: \"checkBox-actived\" },\r\n                React.createElement(CheckOutlined, { style: { fontSize: '12px' } })));\r\n        }\r\n        else {\r\n            return React.createElement(\"div\", { className: \"checkBox-noActived\" });\r\n        }\r\n    }, [checkStatus, checked]);\r\n    const renderCheckGroupDom = useCallback((checkBoxOptions) => {\r\n        //渲染checkbox组状态\r\n        if (checkBoxOptions.disabled) {\r\n            return React.createElement(\"div\", { className: \"disblaed-checkBox\" });\r\n        }\r\n        else if (checkBoxOptions.checked) {\r\n            return (React.createElement(\"div\", { className: \"checkBox-actived\" },\r\n                React.createElement(CheckOutlined, { style: { fontSize: '12px' } })));\r\n        }\r\n        else if (!checkBoxOptions.checked) {\r\n            return React.createElement(\"div\", { className: \"checkBox-noActived\" });\r\n        }\r\n    }, [group]);\r\n    return (React.createElement(Fragment, null, group && group.length ? (React.createElement(\"div\", { className: \"checkGroup\", style: { '--global-color': globalColor || '#1890ff' } }, group.map((c, i) => {\r\n        return (React.createElement(\"div\", { className: \"checkbox groupBox\", key: i, onClick: () => toggleGroupCheckedStatus(i) },\r\n            renderCheckGroupDom(c),\r\n            React.createElement(\"div\", { className: \"text\" }, c.label)));\r\n    }))) : (React.createElement(\"div\", { className: \"checkbox\", onClick: toggleCheckedStatus, style: { '--global-color': globalColor || '#1890ff' } },\r\n        renderCheckBoxDom,\r\n        React.createElement(\"div\", { className: \"text\" }, children)))));\r\n};\r\nexport default memo(CheckBox);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Form/index.tsx","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/index.tsx","/Users/sjq/Desktop/study/concis/Concis/node_modules/@ant-design/icons/lib/index.d.ts"]}
