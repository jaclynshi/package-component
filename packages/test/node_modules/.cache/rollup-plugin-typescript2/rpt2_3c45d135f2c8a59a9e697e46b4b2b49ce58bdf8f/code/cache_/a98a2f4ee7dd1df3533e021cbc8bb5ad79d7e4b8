{"code":"import React, { useState, memo, useCallback, useContext } from 'react';\r\nimport Input from '../../Input';\r\nimport { globalCtx } from '../../GlobalConfig';\r\nimport './index.module.less';\r\nconst RadioGroup = (props) => {\r\n    const { children, value, canAddOption, boxStyle, onChange } = props;\r\n    const [selectIndex, setSelectIndex] = useState(value || 0); //选中索引\r\n    const [renderOptions, setRenderOptions] = useState(children);\r\n    const [addOptionVal, setAddOptionVal] = useState('');\r\n    const [showAddOption, setShowAddOption] = useState(canAddOption && false);\r\n    const { globalColor } = useContext(globalCtx);\r\n    const changeOptions = (item, i, e) => {\r\n        if (item.disabled)\r\n            return;\r\n        e && e.stopPropagation();\r\n        setSelectIndex(i);\r\n        onChange && onChange(item, i);\r\n        canAddOption && setShowAddOption(false);\r\n    };\r\n    const addOptions = () => {\r\n        //新增options\r\n        setSelectIndex(renderOptions.length);\r\n        setShowAddOption(true);\r\n    };\r\n    const handleKeyDown = (e) => {\r\n        //新增确认\r\n        if (e.keyCode == 13 && addOptionVal) {\r\n            setRenderOptions((old) => {\r\n                const addOption = {\r\n                    props: {\r\n                        children: addOptionVal,\r\n                    },\r\n                };\r\n                return [...old, addOption];\r\n            });\r\n            setShowAddOption(false);\r\n        }\r\n    };\r\n    const handleIptChange = (val) => {\r\n        //新增输入框\r\n        setAddOptionVal(val);\r\n    };\r\n    const boxStyleClassName = useCallback((props, i) => {\r\n        if (props.disabled) {\r\n            return 'groupDisabledStyle';\r\n        }\r\n        if (i == selectIndex) {\r\n            return 'groupActive';\r\n        }\r\n        return 'groupStyle';\r\n    }, [children, boxStyle, value, selectIndex]);\r\n    return (React.createElement(\"div\", { className: \"radioGroup\", style: { '--global-color': globalColor || '#1890ff' } },\r\n        renderOptions.map((item, index) => {\r\n            return boxStyle ? (React.createElement(\"div\", { className: boxStyleClassName(item.props, index), style: item.props.disabled ? { cursor: 'not-allowed' } : { cursor: 'pointer' }, key: index, onClick: (e) => changeOptions(item.props, index, e) }, item.props.children)) : (React.createElement(\"div\", { className: \"radioBox\", style: item.props.disabled ? { cursor: 'not-allowed' } : { cursor: 'pointer' }, key: index, onClick: (e) => changeOptions(item.props, index, e) },\r\n                React.createElement(\"div\", { className: selectIndex === index ? 'radio-checked' : 'radio', style: item.props.disabled ? { cursor: 'not-allowed' } : { cursor: 'pointer' } }),\r\n                React.createElement(\"span\", { className: item.props.disabled ? 'disabledLabel' : 'radioLabel' }, item.props.children)));\r\n        }),\r\n        //新增Options项(优雅之王)\r\n        canAddOption ? (boxStyle ? (React.createElement(\"div\", { className: \"addOption\" },\r\n            React.createElement(\"div\", { className: selectIndex === renderOptions.length ? 'groupActive' : 'groupStyle', onClick: addOptions }, \"More...\"),\r\n            showAddOption && (React.createElement(Input, { handleKeyDown: handleKeyDown, handleIptChange: handleIptChange })))) : (React.createElement(\"div\", { className: \"addOption\" },\r\n            React.createElement(\"div\", { className: \"radioBox\", onClick: addOptions },\r\n                React.createElement(\"div\", { className: selectIndex === renderOptions.length ? 'radio-checked' : 'radio' }),\r\n                React.createElement(\"span\", { className: \"radioLabel\" }, \"More...\")),\r\n            showAddOption && (React.createElement(Input, { handleKeyDown: handleKeyDown, handleIptChange: handleIptChange }))))) : (React.createElement(React.Fragment, null))));\r\n};\r\nexport default memo(RadioGroup);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Input/index.tsx","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/index.tsx"]}
