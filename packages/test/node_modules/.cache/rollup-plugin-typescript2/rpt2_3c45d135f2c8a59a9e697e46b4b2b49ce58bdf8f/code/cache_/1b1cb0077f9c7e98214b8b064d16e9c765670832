{"code":"import React, { useState, useMemo, memo, useContext } from 'react';\r\nimport { EllipsisOutlined, LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { Select } from '..';\r\nimport { globalCtx } from '../GlobalConfig';\r\nimport './index.module.less';\r\nconst Pagination = (props) => {\r\n    const { style, changePageCallback, changePageSizeCallback, total, pageSizeOptions, showJumpInput, showSizeChanger, } = props;\r\n    const [nowIndex, setNowIndex] = useState(1);\r\n    const [pageRenderArray, setPageRenderArray] = useState([]);\r\n    const [sizePage, setSizePage] = useState(pageSizeOptions ? pageSizeOptions[0] : 10);\r\n    const { globalColor } = useContext(globalCtx);\r\n    const totalPage = useMemo(() => {\r\n        setNowIndex(1);\r\n        if (Math.ceil(total / sizePage) > 6) {\r\n            setPageRenderArray([2, 3, 4, 5, 6]);\r\n        }\r\n        else {\r\n            if (Math.ceil(total / sizePage) > 2) {\r\n                const array = new Array(Math.ceil(total / sizePage) - 2).fill(0);\r\n                array.forEach((item, index) => {\r\n                    array[index] = index + 2;\r\n                });\r\n                setPageRenderArray(array);\r\n            }\r\n            else {\r\n                setPageRenderArray([]);\r\n            }\r\n        }\r\n        return Math.ceil(total / sizePage);\r\n    }, [total, sizePage]);\r\n    //点击改页码\r\n    const changePage = (pageNum) => {\r\n        return () => {\r\n            //小型分页器\r\n            if (totalPage <= 6) {\r\n                changePageCallback && changePageCallback(pageNum);\r\n                return setNowIndex(pageNum);\r\n            }\r\n            if (pageNum > 4 && pageNum <= totalPage - 4) {\r\n                setPageRenderArray([pageNum - 2, pageNum - 1, pageNum, pageNum + 1, pageNum + 2]);\r\n            }\r\n            //页码为1的情况\r\n            if (pageNum <= 4) {\r\n                setPageRenderArray([2, 3, 4, 5, 6]);\r\n            }\r\n            //页码到倒数第四页内的情况\r\n            if (pageNum > totalPage - 4) {\r\n                setPageRenderArray([\r\n                    totalPage - 5,\r\n                    totalPage - 4,\r\n                    totalPage - 3,\r\n                    totalPage - 2,\r\n                    totalPage - 1,\r\n                ]);\r\n            }\r\n            setNowIndex(pageNum);\r\n            changePageCallback && changePageCallback(pageNum);\r\n        };\r\n    };\r\n    //向前翻一页\r\n    const prevPage = () => {\r\n        if (nowIndex === 1) {\r\n            return;\r\n        }\r\n        setNowIndex(nowIndex - 1);\r\n        if (totalPage > 6) {\r\n            if (nowIndex > totalPage - 3) {\r\n                return;\r\n            }\r\n            else if (nowIndex > 4) {\r\n                setPageRenderArray(pageRenderArray.map((item) => {\r\n                    return item - 1;\r\n                }));\r\n            }\r\n            else if (nowIndex - 5 <= 4) {\r\n                //开头几页翻页的情况，回到第一页\r\n                setPageRenderArray([2, 3, 4, 5, 6]);\r\n            }\r\n        }\r\n        changePageCallback && changePageCallback(nowIndex - 1);\r\n    };\r\n    //向后翻一页\r\n    const nextPage = () => {\r\n        if (nowIndex === totalPage) {\r\n            return;\r\n        }\r\n        setNowIndex(nowIndex + 1);\r\n        if (totalPage > 6) {\r\n            if (nowIndex + 5 > totalPage) {\r\n                setPageRenderArray([\r\n                    totalPage - 5,\r\n                    totalPage - 4,\r\n                    totalPage - 3,\r\n                    totalPage - 2,\r\n                    totalPage - 1,\r\n                ]);\r\n            }\r\n            else if (nowIndex < 4) {\r\n                return;\r\n            }\r\n            else if (nowIndex + 5 < totalPage) {\r\n                setPageRenderArray(pageRenderArray.map((item) => {\r\n                    return item + 1;\r\n                }));\r\n            }\r\n        }\r\n        changePageCallback && changePageCallback(nowIndex + 1);\r\n    };\r\n    //向前翻五页\r\n    const prevFivePage = () => {\r\n        var updateIndex = 0;\r\n        if (nowIndex - 5 <= 4) {\r\n            //开头几页翻页的情况，回到第一页\r\n            setPageRenderArray([2, 3, 4, 5, 6]);\r\n            updateIndex = nowIndex - 5 <= 1 ? 1 : nowIndex - 5;\r\n        }\r\n        else if (nowIndex + 5 > totalPage) {\r\n            setPageRenderArray([nowIndex - 7, nowIndex - 6, nowIndex - 5, nowIndex - 4, nowIndex - 3]);\r\n            updateIndex = nowIndex - 5;\r\n        }\r\n        else if (nowIndex - 5 > 4) {\r\n            //中间翻页的情况\r\n            setPageRenderArray(pageRenderArray.map((item) => {\r\n                return item - 5;\r\n            }));\r\n            updateIndex = nowIndex - 5;\r\n        }\r\n        setNowIndex(updateIndex);\r\n        changePageCallback && changePageCallback(updateIndex);\r\n    };\r\n    //向后翻五页\r\n    const nextFivePage = () => {\r\n        var updateIndex = 0;\r\n        if (nowIndex + 7 >= totalPage) {\r\n            setPageRenderArray([\r\n                totalPage - 5,\r\n                totalPage - 4,\r\n                totalPage - 3,\r\n                totalPage - 2,\r\n                totalPage - 1,\r\n            ]);\r\n            updateIndex = nowIndex + 5 > totalPage ? totalPage : nowIndex + 5;\r\n        }\r\n        else if (nowIndex - 5 < 0) {\r\n            setPageRenderArray([nowIndex + 3, nowIndex + 4, nowIndex + 5, nowIndex + 6, nowIndex + 7]);\r\n            updateIndex = nowIndex + 5;\r\n        }\r\n        else if (nowIndex + 5 < totalPage) {\r\n            setPageRenderArray(pageRenderArray.map((item) => {\r\n                return item + 5;\r\n            }));\r\n            updateIndex = nowIndex + 5;\r\n        }\r\n        setNowIndex(updateIndex);\r\n        changePageCallback && changePageCallback(updateIndex);\r\n    };\r\n    //跳页\r\n    const jumpPageNum = (e) => {\r\n        if (e.keyCode === 13) {\r\n            const jumpPage = Number(e.target.value);\r\n            if (jumpPage > totalPage || jumpPage < 0 || isNaN(jumpPage)) {\r\n                //超出页码范围，不挑\r\n                return (e.target.value = '');\r\n            }\r\n            if (jumpPage > 6 && jumpPage < totalPage - 6) {\r\n                setPageRenderArray([jumpPage - 2, jumpPage - 1, jumpPage, jumpPage + 1, jumpPage + 2]);\r\n            }\r\n            else if (jumpPage - 5 < 0) {\r\n                setPageRenderArray([2, 3, 4, 5, 6]);\r\n            }\r\n            else if (jumpPage + 5 > totalPage) {\r\n                setPageRenderArray([\r\n                    totalPage - 5,\r\n                    totalPage - 4,\r\n                    totalPage - 3,\r\n                    totalPage - 2,\r\n                    totalPage - 1,\r\n                ]);\r\n            }\r\n            setNowIndex(jumpPage);\r\n            changePageCallback && changePageCallback(jumpPage);\r\n            e.target.value = '';\r\n        }\r\n    };\r\n    //select回调\r\n    const handleSelectCallback = (pageSize) => {\r\n        setSizePage(pageSize.value);\r\n        changePageSizeCallback && changePageSizeCallback(pageSize.value);\r\n    };\r\n    return (React.createElement(\"div\", { className: \"pagination\", style: Object.assign(Object.assign({}, style), { '--global-color': globalColor || '#1890ff' }) },\r\n        React.createElement(\"div\", { className: nowIndex === 1 ? `prev disabled` : `prev`, onClick: prevPage },\r\n            React.createElement(LeftOutlined, null)),\r\n        React.createElement(\"div\", { className: nowIndex === 1 ? `actived numberBox` : `numberBox`, onClick: changePage(1) }, \"1\"),\r\n        nowIndex > 4 && totalPage > 6 && (React.createElement(\"div\", { className: \"numberBox\", onClick: prevFivePage },\r\n            React.createElement(EllipsisOutlined, null))),\r\n        totalPage >= 1 &&\r\n            pageRenderArray.map((item, index) => {\r\n                {\r\n                    return (React.createElement(\"div\", { className: nowIndex === item ? `actived numberBox` : `numberBox`, key: index, onClick: changePage(item) }, item));\r\n                }\r\n            }),\r\n        totalPage - nowIndex >= 4 && totalPage > 6 && (React.createElement(\"div\", { className: \"numberBox\", onClick: nextFivePage },\r\n            React.createElement(EllipsisOutlined, null))),\r\n        totalPage > 1 && (React.createElement(\"div\", { className: nowIndex === totalPage ? `actived numberBox` : `numberBox`, onClick: changePage(totalPage) }, totalPage)),\r\n        React.createElement(\"div\", { className: nowIndex === totalPage || totalPage <= 1 ? `next disabled` : `next`, onClick: nextPage },\r\n            React.createElement(RightOutlined, null)),\r\n        Array.isArray(pageSizeOptions) && showSizeChanger && (React.createElement(Select, { option: pageSizeOptions.map((item) => {\r\n                return {\r\n                    label: `${item} 条/页`,\r\n                    value: item,\r\n                };\r\n            }), width: 100, handleSelectCallback: handleSelectCallback })),\r\n        showJumpInput && (React.createElement(\"div\", { className: \"jumpBox\" },\r\n            React.createElement(\"span\", null, \"\\u8DF3\\u81F3\"),\r\n            React.createElement(\"input\", { type: \"text\", className: \"jump\", onKeyUp: jumpPageNum }),\r\n            React.createElement(\"span\", null, \"\\u9875\")))));\r\n};\r\nexport default memo(Pagination);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/node_modules/@ant-design/icons/lib/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/index.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/interface.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/GlobalConfig/index.tsx"]}
