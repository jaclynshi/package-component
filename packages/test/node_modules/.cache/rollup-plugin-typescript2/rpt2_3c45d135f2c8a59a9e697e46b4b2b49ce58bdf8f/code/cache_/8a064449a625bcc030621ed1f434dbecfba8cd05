{"code":"import React, { useState, useEffect, memo, useCallback, useContext } from 'react';\r\nimport { ctx } from '../Form';\r\nimport './index.module.less';\r\nconst Rate = (props) => {\r\n    const { num = 5, starColor, defaultShow = num ? num : 0, avaHalf, avaClear, chooseCallback, } = props;\r\n    const [starShowStatus, setStarShowStatus] = useState([]); //真实星星状态\r\n    const [logStarShowStatus, setLogStarShowStatus] = useState([]); //鼠标移动临时状态\r\n    const [hasClick, setHasClick] = useState(false);\r\n    const formCtx = useContext(ctx);\r\n    useEffect(() => {\r\n        const initStar = [];\r\n        for (let i = 0; i < defaultShow; i++) {\r\n            initStar[i] = true;\r\n        }\r\n        if (num > defaultShow && initStar.length < num) {\r\n            initStar.splice(initStar.length, 0, ...new Array(num - defaultShow).fill(false));\r\n        }\r\n        setStarShowStatus(initStar);\r\n        setLogStarShowStatus(initStar);\r\n    }, []);\r\n    useEffect(() => {\r\n        //用于监听Form组件的重置任务\r\n        if (formCtx.reset) {\r\n            setLogStarShowStatus([]);\r\n            setStarShowStatus(() => {\r\n                const oldArr = [];\r\n                for (let i = 0; i < defaultShow; i++) {\r\n                    oldArr[i] = true;\r\n                }\r\n                if (num > defaultShow && oldArr.length < num) {\r\n                    oldArr.splice(oldArr.length, 0, ...new Array(num - defaultShow).fill(false));\r\n                }\r\n                return JSON.parse(JSON.stringify(oldArr));\r\n            });\r\n        }\r\n    }, [formCtx.reset]);\r\n    useEffect(() => {\r\n        if (formCtx.submitStatus) {\r\n            formCtx.getChildVal(starShowStatus.filter((s) => s).length);\r\n        }\r\n    }, [formCtx.submitStatus]);\r\n    const rateShowConfig = useCallback(\r\n    //星星样式\r\n    (i) => {\r\n        if (starShowStatus[i] == 'half' && avaHalf) {\r\n            if (i == starShowStatus.length - 1) {\r\n                return {\r\n                    width: '50%',\r\n                    opacity: 1,\r\n                    right: '5px',\r\n                };\r\n            }\r\n            return {\r\n                width: '50%',\r\n                opacity: 1,\r\n            };\r\n        }\r\n        else if (!starShowStatus[i]) {\r\n            return {\r\n                width: '100%',\r\n                opacity: 1,\r\n            };\r\n        }\r\n        else if (starShowStatus[i]) {\r\n            return {\r\n                width: '0%',\r\n                opacity: 0,\r\n            };\r\n        }\r\n    }, [num, starShowStatus]);\r\n    const enterStar = (e, i) => {\r\n        //进入星星\r\n        const event = e;\r\n        const mouseLeft = event.offsetX;\r\n        setStarShowStatus((oldArr) => {\r\n            if (mouseLeft >= 8) {\r\n                oldArr[i] = true;\r\n            }\r\n            else if (mouseLeft < 5 && avaHalf) {\r\n                oldArr[i] = 'half';\r\n            }\r\n            for (let start = 0; start < i; start++) {\r\n                oldArr[start] = true;\r\n            }\r\n            for (let start = i + 1; start < oldArr.length; start++) {\r\n                oldArr[start] = false;\r\n            }\r\n            return JSON.parse(JSON.stringify(oldArr));\r\n        });\r\n    };\r\n    const isSureNowStatus = () => {\r\n        //点击确认状态\r\n        if (avaClear && hasClick && starShowStatus.toString() == logStarShowStatus.toString()) {\r\n            setHasClick(false);\r\n            setStarShowStatus((oldArr) => {\r\n                oldArr = oldArr.map((ra) => (ra = false));\r\n                chooseCallback &&\r\n                    chooseCallback(oldArr.reduce((pre, next) => {\r\n                        //统计分数\r\n                        if (pre == 'half') {\r\n                            pre = 0.5;\r\n                        }\r\n                        else if (pre == true) {\r\n                            pre = 1;\r\n                        }\r\n                        else if (pre == false) {\r\n                            pre = 0;\r\n                        }\r\n                        if (next == 'half') {\r\n                            next = 0.5;\r\n                        }\r\n                        else if (next == true) {\r\n                            next = 1;\r\n                        }\r\n                        else if (next == false) {\r\n                            next = 0;\r\n                        }\r\n                        return pre + next;\r\n                    }));\r\n                setLogStarShowStatus((oldArr) => {\r\n                    //清除\r\n                    oldArr = oldArr.map((ra) => (ra = false));\r\n                    return JSON.parse(JSON.stringify(oldArr));\r\n                });\r\n                return JSON.parse(JSON.stringify(oldArr));\r\n            });\r\n        }\r\n        else {\r\n            setLogStarShowStatus((oldArr) => {\r\n                //更新历史数组\r\n                oldArr = starShowStatus;\r\n                return JSON.parse(JSON.stringify(oldArr));\r\n            });\r\n            setHasClick(true);\r\n            chooseCallback &&\r\n                chooseCallback(starShowStatus.reduce((pre, next) => {\r\n                    if (pre == 'half') {\r\n                        pre = 0.5;\r\n                    }\r\n                    else if (pre == true) {\r\n                        pre = 1;\r\n                    }\r\n                    else if (pre == false) {\r\n                        pre = 0;\r\n                    }\r\n                    if (next == 'half') {\r\n                        next = 0.5;\r\n                    }\r\n                    else if (next == true) {\r\n                        next = 1;\r\n                    }\r\n                    else if (next == false) {\r\n                        next = 0;\r\n                    }\r\n                    return pre + next;\r\n                }));\r\n        }\r\n    };\r\n    const enterRate = () => {\r\n        //进入整个容器\r\n        setLogStarShowStatus((oldArr) => {\r\n            oldArr = starShowStatus;\r\n            return JSON.parse(JSON.stringify(oldArr));\r\n        });\r\n    };\r\n    const leaveRate = () => {\r\n        //离开整个容器\r\n        if (!hasClick) {\r\n            setStarShowStatus((oldArr) => {\r\n                oldArr = logStarShowStatus;\r\n                return JSON.parse(JSON.stringify(oldArr));\r\n            });\r\n        }\r\n        setHasClick(false);\r\n    };\r\n    return (React.createElement(\"div\", { className: \"rate\" },\r\n        React.createElement(\"div\", { className: \"rate-container\", onMouseLeave: leaveRate, onMouseEnter: enterRate }, new Array(num).fill('').map((ra, i) => {\r\n            return (React.createElement(\"div\", { className: \"rate-box\", key: i, style: starShowStatus[i] ? { opacity: 1 } : { opacity: 0 }, onMouseMove: (event) => enterStar(event.nativeEvent, i), onClick: isSureNowStatus },\r\n                React.createElement(\"div\", { className: \"half-dialog\", style: rateShowConfig(i) }),\r\n                React.createElement(\"svg\", { style: { color: starColor }, className: \"rate-row\", viewBox: \"80 80 896 896\", focusable: \"false\", \"data-icon\": \"star\", width: \"20px\", height: \"20px\", fill: \"currentColor\", \"aria-hidden\": \"true\" },\r\n                    React.createElement(\"path\", { d: \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" }))));\r\n        }))));\r\n};\r\nexport default memo(Rate);\r\n","references":["/Users/sjq/Desktop/study/concis/Concis/node_modules/@types/react/index.d.ts","/Users/sjq/Desktop/study/concis/Concis/packages/concis-react/src/Form/index.tsx"]}
